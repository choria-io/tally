name: build_tasks
description: Choria Build Tasks

commands:
    - name: dependencies
      type: parent
      description: Manage dependencies
      aliases: [d]
      commands:
        - name: update
          description: Update dependencies
          type: exec
          aliases: [up]
          dir: "{{ AppDir }}"
          flags:
            - name: verbose
              description: Log verbosely
              short: v
              bool: true
            - name: proxy
              description: Enable using go proxy
              bool: true
              default: "true"
          script: |
            . "{{ BashHelperPath }}"

            ab_announce Updating all dependencies
            echo

            {{ if eq .Flags.proxy false }}
            export GOPROXY=direct
            ab_say Disabling go mod proxy
            {{ end }}

            go get -u -n -a -t {{- if .Flags.verbose }} -d -x {{ end }} ./...

            ab_say Running go mod tidy

            go mod tidy

    - name: build
      type: parent
      aliases: [b]
      description: Code build steps
      commands:
        - name: binary
          description: Build a basic test binary
          type: exec
          dir: "{{ AppDir }}"
          aliases: [bin]
          banner: |
              >>>
              >>> Building 'tally' locally
              >>>
              >>>               Target: {{ if .Flags.target }}{{ .Flags.target }}{{else}}host{{end}}
              >>>
          flags:
            - name: target
              description: Target platform to build for
              enum: ["linux/amd64", "linux/arm64"]
              short: T
            - name: verbose
              description: Logs packages being build
              bool: true
              short: v
          script: |
            set -e

            . "{{ BashHelperPath }}"

            {{ if eq .Flags.target "linux/amd64" }}
                export GOOS=linux
                export GOARCH=amd64
            {{ else if eq .Flags.target "linux/arm64" }}
                export GOOS=linux
                export GOARCH=arm64
            {{ end }}

            {{ if .Flags.verbose }}
            ab_say Packages being build
            {{ end }}

            go build \
              {{ if .Flags.verbose }}-v{{ end }} \
              -ldflags="-s -w \
                -X 'github.com/choria-io/tally.version=0.98.0.$(date +%s)' \
                " -o tally

            ab_say Build completed

            echo
            ls -l tally
            echo
            file tally
            echo
